<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XSSPPBsAAAAASUVORK5CYII=
</value>
  </data>
</root>